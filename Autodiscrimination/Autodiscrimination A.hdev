<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="436890015">
<procedure name="main">
<interface/>
<body>
<c>* Code generated by Image Acquisition 03</c>
<c>* 获取条形码，并计算及显示解码时间，并从规定读取的条码类型范围中读取被解码的条码类型，</c>
<c>* 也可设置成不规定条码类型即自动识别，但会增加解码时间,甚至出现误读的情况。</c>
<c>* 可读取多个不同类型的条码，并且多个条码用不同颜色的区域框区分，且读取出来的信息也以</c>
<c>* 相应的颜色做区分</c>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 600, 600, 'black', WindowHandle)</l>
<c>*先关闭活动图形窗口，再打开这个窗口，标识符为WindowHandle；</c>
<c>*相对于界面左上角第0行、第0列，大小为300×300像素，颜色为黑色。</c>
<l>open_framegrabber ('DirectShow', 1, 1, 0, 0, 0, 0, 'default', 8, 'rgb', -1, 'false', 'default', 'Gsou USB2.0 Camera', 0, -1, AcqHandle)</l>
<c>* 打开帧接收器（图像采集设备，如摄像头，工业相机等），参数（Parameter）详见这个算子</c>
<c>* 注意，采集器名称不同要更改，或者用助手获取也可以。</c>
<l>grab_image_start (AcqHandle, -1)</l>
<l>while (true)</l>
<l>    grab_image_async (Image, AcqHandle, -1)</l>
<c>    *开始条形码识别</c>
<l>     create_bar_code_model ([], [], BarCodeHandle)</l>
<c>     *必备的创建条码解码的开头，下面有一段结束代码</c>
<l>        dev_update_var ('off')</l>
<l>        dev_update_pc ('off')</l>
<l>        dev_update_window ('off')</l>
<c>        * 刷新窗体</c>
<l>        set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>        dev_set_draw ('margin')</l>
<l>        dev_set_line_width (3)</l>
<l>        Colors := ['forest green','magenta','blue','red','yellow']</l>
<c>        * 设置区域框的属性，如无填充色、边框线大小为3，颜色。</c>
<l>        *CodeTypes := ['auto']</l>
<l>        CodeTypes := ['EAN-13','Code 39','EAN-8','Code 128','Code 93']</l>
<c>        * 设置条码的类型，如EAN-13等5种一维码类型，或者auto自动获取（但解码时间较长且有误读的可能）</c>
<l>        get_image_size (Image, Width, Height)</l>
<l>        dev_display (Image)</l>
<c>        *获取图像大小，并显示图像</c>
<l>        count_seconds (Start)</l>
<l>        find_bar_code (Image, SymbolRegions, BarCodeHandle, CodeTypes, DecodedDataStrings)</l>
<l>        count_seconds (Stop)</l>
<l>        Duration := (Stop - Start) * 1000</l>
<c>        *开始计时、寻找并解码条形码（参数解释详见这个算子），结束计时，并计算解码的时间</c>
<l>        dev_display (SymbolRegions)</l>
<l>        get_bar_code_object (BarCodeObjects, BarCodeHandle, 'all', 'symbol_regions')</l>
<l>        get_bar_code_result (BarCodeHandle, 'all', 'decoded_types', DecodedDataTypes)</l>
<l>        *area_center (SymbolRegions, Area, Rows, Columns)</l>
<l>        for J := 0 to |DecodedDataStrings|-1 by 1</l>
<l>                dev_set_color (Colors[J])</l>
<l>                select_obj (BarCodeObjects, ObjectSelected, J+1)</l>
<l>                dev_display (ObjectSelected)</l>
<l>        endfor</l>
<c>        *循环获取，并且根据获取的条码数量，设置区域框的颜色</c>
<l>        if (|DecodedDataStrings| &gt;= 1)</l>
<l>                *disp_message (WindowHandle, ['Found bar code(s) in ' + Duration$'3.0f' + 'ms:','\n Type: ' + DecodedDataTypes + '\n Data: ' + DecodedDataStrings], 'window', 5*12, 12, 'black', 'true')</l>
<l>                disp_message (WindowHandle, '读取条形码,用时{' + Duration$'3.0f' + 'ms}:' + '[' + DecodedDataTypes + ']' + '=' + '“' +  DecodedDataStrings + '”', 'window', 12, 12, Colors, 'true')</l>
<l>                disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>             wait_seconds(3)</l>
<l>        endif</l>
<c>        *判断读取到数据的数量，当大于1（数字可改为2、3……）个条码被解码时，显示信息在窗体的第12行，第12列的位置，并按顺序用不同的颜色标注</c>
<l>     clear_bar_code_model (BarCodeHandle)  </l>
<c>     *关闭条形码解码</c>
<l>endwhile</l>
<l>close_framegrabber (AcqHandle)</l>
<c>*关闭帧接收器（摄像头）</c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
